@using chamaovar.Components.Code
@using System.Text.RegularExpressions
@using System.Timers
@rendermode InteractiveServer

<nav class="navegacao_tudo">

    <div class="navegacao_container">

        <a class="logo_chamaovar_nav" href="">
            <img src="/img/logo-no-background.png" alt="Chama o VAR" />
        </a>

        <div class="botoes_nav" @onclick="ToggleNavMenu">

            <ul class="lista_botoes_nav">

                <li class="item_navegacao">
                    <NavLink class="link_navegacao" href="" Match="NavLinkMatch.All">
                        <span class="texto_nav" aria-hidden="true">Home</span>
                    </NavLink>
                </li>

                <li class="item_navegacao">
                    <NavLink class="link_navegacao" href="sobre">
                        <span class="texto_nav" aria-hidden="true">Sobre</span>
                    </NavLink>
                </li>

                <li class="item_navegacao">
                    <NavLink class="link_navegacao" href="contato">
                        <span class="texto_nav" aria-hidden="true">Contato</span>
                    </NavLink>
                </li>
            </ul>

        </div>

        <div class="botao_login_nav">
            <a href="login">
                <span> @nome_usuario </span>

                <img src="img/profile-user.png" class="icone_usuario" />
            </a>
        </div>

    </div>

</nav>

@code {
    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    public string nome_usuario = "Fazer Login";

    Timer timer = new Timer();

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public async Task UpdateNav()
    {
        // Procurar torcedor pelo token
        Torcedor? user = await TokenSystem.GetTorcedorByToken();

        // socorro eu to em crise
        if (user == null)
        {
            // Manter o fazer login
            nome_usuario = "Fazer Login";

            StateHasChanged();

            // Retornar e não fazer mais nada
            return;
        }

        // Caso o usuário esteja logado
        nome_usuario = user.nome_completo;

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        // Atualizar
        await UpdateNav();

        // Definir timer
        timer.Interval = 6000;
        timer.Elapsed += async (_, _) => await UpdateNav();
    }
}